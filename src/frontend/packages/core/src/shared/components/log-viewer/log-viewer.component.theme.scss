// Temporarily disabled: @import '@angular/material/theming';

@function ansi-colour($ansi-colours, $colour-name, $intense) {
  @if map-has-key($ansi-colours, $colour-name) {
    @if $intense {
      @return map-get(map-get($ansi-colours, $colour-name), intense);
    }
    @else {
      @return map-get(map-get($ansi-colours, $colour-name), normal);
    }
  }
  @warn 'Unknown "#{$colour-name}" in $ansi-colours.';
  @return null;
}

@mixin app-log-viewer-theme($theme, $app-theme) {
  $ansi-colours: map-get($app-theme, ansi-colors);
  $primary: map-get($theme, primary);
  $status-colors: map-get($app-theme, status);
  $message-text: map-get($status-colors, text);

  .log-scroller {
    background-color: ansi-colour($ansi-colours, 'default-background', false);
    border-color: ansi-colour($ansi-colours, 'default-background', false);
    color: ansi-colour($ansi-colours, 'default-foreground', false);
  }
  .log-viewer__message {
    background-color: mat-color($primary);
    color: mat-contrast($primary, 500);
  }
  .log-viewer__message-error {
    background-color: map-get($status-colors, danger);
  }
  @each $colour-name,
  $colour in $ansi-colours {
    .ansi-#{$colour-name} {
      color: map-get($colour, normal);
      &.intense {
        color: map-get($colour, intense);
        font-weight: bold;
      }
    }
    .ansi-background-#{$colour-name} {
      background-color: map-get($colour, normal);
    }
  }
}
